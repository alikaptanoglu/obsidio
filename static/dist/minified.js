function Constants(){throw Error("Constants should not be instantiated!");}Constants.WORLD_MIN=0;Constants.WORLD_MAX=2500;Constants.WORLD_PADDING=30;Constants.CANVAS_WIDTH=800;Constants.CANVAS_HEIGHT=600;Constants.VISIBILITY_THRESHOLD_X=425;Constants.VISIBILITY_THRESHOLD_Y=325;try{module.exports=Constants}catch(a){};try{Constants=require("./Constants")}catch(a){}function Util(){throw Error("Util should not be instantiated!");}Util.getManhattanDistance=function(a,b,c,d){return Math.abs(a-c)+Math.abs(b-d)};Util.getEuclideanDistance2=function(a,b,c,d){return(a-c)*(a-c)+(b-d)*(b-d)};Util.getEuclideanDistance=function(a,b,c,d){return Math.sqrt(Util.getEuclideanDistance2(a,c,b,d))};Util.inBound=function(a,b,c){return b>c?a>=c&&a<=b:a>=b&&a<=c};
Util.bound=function(a,b,c){return b>c?Math.min(Math.max(a,c),b):Math.min(Math.max(a,b),c)};Util.inWorld=function(a,b){return Util.inBound(a,Constants.WORLD_MIN,Constants.WORLD_MAX)&&Util.inBound(b,Constants.WORLD_MIN,Constants.WORLD_MAX)};Util.boundWorld=function(a,b){return[Util.bound(a,Constants.WORLD_MIN,Constants.WORLD_MAX),Util.bound(b,Constants.WORLD_MIN,Constants.WORLD_MAX)]};
Util.getRandomWorldPoint=function(a){a||(a=Constants.WORLD_PADDING);return[Util.randRange(Constants.WORLD_MIN+a,Constants.WORLD_MAX-a),Util.randRange(Constants.WORLD_MIN+a,Constants.WORLD_MAX-a)]};Util.randRange=function(a,b){if(a>=b){var c=a;a=b;b=c}return Math.random()*(b-a)+a};Util.randRangeInt=function(a,b){if(a>=b){var c=a;a=b;b=c}return Math.floor(Math.random()*(b-a))+a};Util.choiceArray=function(a){return a[Util.randRangeInt(0,a.length)]};try{module.exports=Util}catch(a){};function AFK_Kicker(){}AFK_Kicker.TIMER=0;AFK_Kicker.KICK_TIME=12E4;AFK_Kicker.init=function(){AFK_Kicker.TIMER=(new Date).getTime();window.addEventListener("click",AFK_Kicker.resetTimer);window.addEventListener("mousemove",AFK_Kicker.resetTimer);window.addEventListener("keydown",AFK_Kicker.resetTimer);window.addEventListener("keyup",AFK_Kicker.resetTimer)};AFK_Kicker.check=function(){(new Date).getTime()>AFK_Kicker.TIMER+AFK_Kicker.KICK_TIME&&location.reload()};
AFK_Kicker.resetTimer=function(){AFK_Kicker.TIMER=(new Date).getTime()};function Chat(a,b,c){this.socket=a;this.displayElement=b;this.textElement=c}Chat.prototype.init=function(){var a=this;this.textElement.onkeydown=function(b){13==b.keyCode&&a.sendMessage()};this.socket.on("chat-server-to-clients",function(b){a.receiveMessage(b.name,b.message,b.isNotification)})};Chat.prototype.receiveMessage=function(a,b,c){var d=document.createElement("li");c&&d.setAttribute("class","notification");d.appendChild(document.createTextNode(a+": "+b));this.displayElement.appendChild(d)};
Chat.prototype.sendMessage=function(){var a=this.textElement.value;this.textElement.value="";this.socket.emit("chat-client-to-server",a)};function Drawing(a){this.context=a;this.ui=document.createElement("div")}Drawing.FONT="14px Helvetica";Drawing.FONT_COLOR="black";Drawing.HP_COLOR="green";Drawing.HP_MISSING_COLOR="red";Drawing.UI_COLOR="#AAAAAA";Drawing.UI_ITEM_COLOR="#DDDDDD";Drawing.UI_BORDER_COLOR="#333333";Drawing.BASE_IMG_URL="/static/img/";Drawing.SELF_PLAYER_SRC=Drawing.BASE_IMG_URL+"self_player.png";Drawing.OTHER_PLAYER_SRC=Drawing.BASE_IMG_URL+"other_player.png";Drawing.PROJECTILE_SRC=Drawing.BASE_IMG_URL+"projectile.png";
Drawing.PRAESIDIUM_SRC=Drawing.BASE_IMG_URL+"praesidium.png";Drawing.TURRET_SRC=Drawing.BASE_IMG_URL+"turret.png";Drawing.TILE_SRC=Drawing.BASE_IMG_URL+"tile.png";Drawing.PLAYER_SIZE=[64,64];Drawing.PROJECTILE_SIZE=[8,8];Drawing.PRAESIDIUM_SIZE=[32,32];Drawing.TURRET_SIZE=[64,64];Drawing.TILE_SIZE=100;
Drawing.prototype.init=function(){this.ui.style.position="absolute";this.ui.style.top=0;this.ui.style.right=0;this.ui.style.width="100px";this.ui.style.height="100%";this.ui.style.backgroundColor=Drawing.UI_COLOR;var a=document.createElement("div");a.setAttribute("id","ui-turret");a.style.width="80px";a.style.height="80px";a.style.marginTop="10px";a.style.marginLeft="10px";a.style.backgroundColor=Drawing.UI_ITEM_COLOR;a.style.border="10px solid "+Drawing.UI_BORDER_COLOR;a.style.borderRadius="10px";
this.ui.appendChild(a);document.getElementById("game-container").appendChild(this.ui)};Drawing.prototype.drawPlayer=function(a,b,c,d){this.context.save();this.context.translate(b[0],b[1]);this.context.rotate(c);b=new Image;b.src=a?Drawing.SELF_PLAYER_SRC:Drawing.OTHER_PLAYER_SRC;this.context.drawImage(b,-Drawing.PLAYER_SIZE[0]/2,-Drawing.PLAYER_SIZE[1]/2,Drawing.PLAYER_SIZE[0],Drawing.PLAYER_SIZE[1]);this.context.restore()};
Drawing.prototype.drawProjectile=function(a,b){this.context.save();this.context.translate(a[0],a[1]);this.context.rotate(b);var c=new Image;c.src=Drawing.PROJECTILE_SRC;this.context.drawImage(c,-Drawing.PROJECTILE_SIZE[0]/2,-Drawing.PROJECTILE_SIZE[1]/2,Drawing.PROJECTILE_SIZE[0],Drawing.PROJECTILE_SIZE[1]);this.context.restore()};
Drawing.prototype.drawPraesidium=function(a,b){this.context.save();this.context.translate(a[0],a[1]);var c=new Image;c.src=Drawing.PRAESIDIUM_SRC;this.context.drawImage(c,-Drawing.PRAESIDIUM_SIZE[0]/2,-Drawing.PRAESIDIUM_SIZE[1]/2,Drawing.PRAESIDIUM_SIZE[0],Drawing.PRAESIDIUM_SIZE[1]);this.context.restore()};
Drawing.prototype.drawTurret=function(a){this.context.save();this.context.translate(a[0],a[1]);a=new Image;a.src=Drawing.TURRET_SRC;this.context.drawImage(a,-Drawing.TURRET_SIZE[0]/2,-Drawing.TURRET_SIZE[1]/2,Drawing.TURRET_SIZE[0],Drawing.TURRET_SIZE[1]);this.context.restore()};
Drawing.prototype.drawUI=function(a,b){this.context.fillStyle=Drawing.UI_COLOR;this.context.fillRect(0,0,200,60);this.context.font=Drawing.FONT;this.context.fillStyle=Drawing.FONT_COLOR;this.context.fillText("Health: ",10,20);this.context.fillText("Praesidia: "+b,10,40);for(var c=0;10>c;++c)this.context.fillStyle=c<a?Drawing.HP_COLOR:Drawing.HP_MISSING_COLOR,this.context.fillRect(70+10*c,10,10,10)};
Drawing.prototype.drawTiles=function(a,b){this.context.save();var c=new Image;c.src=Drawing.TILE_SRC;for(var d=a[0];d<b[0];d+=Drawing.TILE_SIZE)for(var e=a[1];e<b[1];e+=Drawing.TILE_SIZE)this.context.drawImage(c,d,e);this.context.restore()};function Environment(a,b){this.viewPort=a;this.drawing=b}
Environment.prototype.draw=function(){var a=this.viewPort.selfCoords;this.drawing.drawTiles(this.viewPort.toCanvasCoords({x:Math.max(Math.floor((a[0]-Constants.CANVAS_WIDTH/2)/Drawing.TILE_SIZE)*Drawing.TILE_SIZE,Constants.WORLD_MIN),y:Math.max(Math.floor((a[1]-Constants.CANVAS_HEIGHT/2)/Drawing.TILE_SIZE)*Drawing.TILE_SIZE,Constants.WORLD_MIN)}),this.viewPort.toCanvasCoords({x:Math.min((Math.ceil((a[0]+Constants.CANVAS_WIDTH/2)/Drawing.TILE_SIZE)+1)*Drawing.TILE_SIZE,Constants.WORLD_MAX),y:Math.min((Math.ceil((a[1]+
Constants.CANVAS_HEIGHT/2)/Drawing.TILE_SIZE)+1)*Drawing.TILE_SIZE,Constants.WORLD_MAX)}))};function Game(a,b,c){this.socket=a;this.canvas=b;this.canvas.width=Constants.CANVAS_WIDTH;this.canvas.height=Constants.CANVAS_HEIGHT;this.canvasContext=this.canvas.getContext("2d");this.leaderboard=new Leaderboard(c);this.drawing=new Drawing(this.canvasContext);this.viewPort=new ViewPort;this.environment=new Environment(this.viewPort,this.drawing);this.self=null;this.players=[];this.projectiles=[];this.praesidia=[];this.turrets=[];this.latency=0}Game.MOUSE_STATES={NONE:-1,GAME_AREA:0,TURRET:1};
Game.ACTION_STATES={NONE:-1,CONTROL:0,BUILD_PENDING:1};Game.BUILD_TYPES={NONE:-1,TURRET:0};Game.prototype.init=function(){var a=this;this.socket.on("update",function(b){a.receiveGameState(b)});this.drawing.init()};
Game.prototype.receiveGameState=function(a){this.leaderboard.update(a.leaderboard);this.self=a.self;this.players=a.players;this.projectiles=a.projectiles;this.praesidia=a.praesidia;this.turrets=a.turrets;this.latency=a.latency;this.currentActionState=Game.ACTION_STATES.NONE;this.currentBuildType=Game.BUILD_TYPES.NONE};
Game.prototype.update=function(){if(this.self){this.viewPort.update(this.self.x,this.self.y);var a=Game.MOUSE_STATES.NONE,b=this.self.build,c=this.self.orientation;700>Input.MOUSE[0]?(a=Game.MOUSE_STATES.GAME_AREA,c=Math.atan2(Input.MOUSE[1]-Constants.CANVAS_HEIGHT/2,Input.MOUSE[0]-Constants.CANVAS_WIDTH/2)+Math.PI/2):710<=Input.MOUSE[0]&&790>=Input.MOUSE[0]&&10<=Input.MOUSE[1]&&90>=Input.MOUSE[1]&&(a=Game.MOUSE_STATES.TURRET);if(Input.LEFT_CLICKED||Input.TOUCH)if(this.currentActionState==Game.ACTION_STATES.BUILD_PENDING)b=
(a=Game.MOUSE_STATES.GAME_AREA)?{type:this.currentBuildType,x:this.self.x,y:this.self.y}:null,gameState=Game.ACTION_STATES.CONTROL;else if(a=Game.MOUSE_STATES.GAME_AREA)this.currentActionState=Game.ACTION_STATES.CONTROL;else if(a=Game.MOUSE_STATES.TURRET)this.currentActionState=Game.ACTION_STATES.BUILD_PENDING,this.currentBuildType=Game.BUILD_TYPES.TURRET,console.log(this.currentActionState),console.log(this.currentBuildType);a={keyboardState:{up:Input.UP,right:Input.RIGHT,down:Input.DOWN,left:Input.LEFT},
orientation:c,shot:a==Game.MOUSE_STATES.GAME_AREA&&this.currentActionState==Game.ACTION_STATES.CONTROL,build:b,timestamp:(new Date).getTime()};this.socket.emit("player-action",a)}};
Game.prototype.draw=function(){this.canvasContext.clearRect(0,0,Constants.CANVAS_WIDTH,Constants.CANVAS_HEIGHT);this.environment.draw();for(var a=0;a<this.praesidia.length;++a)this.drawing.drawPraesidium(this.viewPort.toCanvasCoords(this.praesidia[a]),this.praesidia[a].quantity);for(a=0;a<this.projectiles.length;++a)this.drawing.drawProjectile(this.viewPort.toCanvasCoords(this.projectiles[a]),this.projectiles[a].orientation);this.self&&this.drawing.drawPlayer(!0,this.viewPort.toCanvasCoords(this.self),
this.self.orientation,this.self.name);for(a=0;a<this.players.length;++a)this.drawing.drawPlayer(!1,this.viewPort.toCanvasCoords(this.players[a]),this.players[a].orientation,this.players[a].name);for(a=0;a<this.turrets.length;++a)this.drawing.drawTurrets(this.viewPort.toCanvasCoords(this.turrets[a]));this.self&&this.drawing.drawUI(this.self.health,this.self.praesidia)};function Input(){}Input.TOUCH=!1;Input.LEFT_CLICK=!1;Input.RIGHT_CLICK=!1;Input.MOUSE=[];Input.LEFT=!1;Input.UP=!1;Input.RIGHT=!1;Input.DOWN=!1;Input.LEFT_CLICKED=!1;Input.onTouchStart=function(a){Input.TOUCH=!0;Input.onMouseMove(a)};Input.onTouchEnd=function(a){Input.TOUCH=!1};Input.onMouseDown=function(a){document.getElementById("canvas").getBoundingClientRect();1==a.which?(Input.LEFT_CLICKED=Input.LEFT_CLICK?!1:!0,Input.LEFT_CLICK=!0):3==a.which&&(Input.RIGHT_CLICK=!0)};
Input.onMouseUp=function(a){1==a.which?(Input.LEFT_CLICKED=!1,Input.LEFT_CLICK=!1):3==a.which&&(Input.RIGHT_CLICK=!1)};Input.onMouseMove=function(a){var b=document.getElementById("canvas").getBoundingClientRect();Input.MOUSE=[a.pageX-b.left,a.pageY-b.top]};
Input.onKeyDown=function(a){if(document.activeElement==document.getElementById("chat-input"))Input.LEFT=!1,Input.UP=!1,Input.RIGHT=!1,Input.DOWN=!1;else switch(a.keyCode){case 37:case 65:Input.LEFT=!0;break;case 38:case 87:Input.UP=!0;break;case 39:case 68:Input.RIGHT=!0;break;case 40:case 83:Input.DOWN=!0}};Input.onKeyUp=function(a){switch(a.keyCode){case 37:case 65:Input.LEFT=!1;break;case 38:case 87:Input.UP=!1;break;case 39:case 68:Input.RIGHT=!1;break;case 40:case 83:Input.DOWN=!1}};
Input.applyEventHandlers=function(){window.addEventListener("touchstart",Input.onTouchStart);window.addEventListener("touchend",Input.onTouchEnd);window.addEventListener("mousedown",Input.onMouseDown);window.addEventListener("mouseup",Input.onMouseUp);window.addEventListener("mousemove",Input.onMouseMove);window.addEventListener("keyup",Input.onKeyUp);window.addEventListener("keydown",Input.onKeyDown)};function KillAnnouncer(a){this.feed=a};function Leaderboard(a){this.element=a;this.players=null}Leaderboard.prototype.update=function(a){for(this.players=a;this.element.firstChild;)this.element.removeChild(this.element.firstChild);for(a=0;a<this.players.length;++a){var b=document.createElement("li");b.appendChild(document.createTextNode(this.players[a].name+" - Kills: "+this.players[a].kills+" Deaths: "+this.players[a].deaths));this.element.appendChild(b)}};function ViewPort(){this.selfCoords=[]}ViewPort.prototype.update=function(a,b){this.selfCoords=[a,b]};ViewPort.prototype.toCanvasCoords=function(a){return[a.x-(this.selfCoords[0]-Constants.CANVAS_WIDTH/2),a.y-(this.selfCoords[1]-Constants.CANVAS_HEIGHT/2)]};var socket=io(),game=new Game(socket,document.getElementById("canvas"),document.getElementById("leaderboard")),chat=new Chat(socket,document.getElementById("chat-display"),document.getElementById("chat-input"));$(document).ready(function(){socket.emit("new-player",{name:"test"});socket.on("received-new-player",function(a){$("#name-prompt-overlay").fadeOut(500);init();animate()})});function init(){Input.applyEventHandlers();AFK_Kicker.init();game.init();chat.init()}
function animate(){AFK_Kicker.check();game.update();game.draw();window.requestAnimFrame(animate)};window.requestAnimFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(a,b){window.setTimeout(a,1E3/60)}}();
